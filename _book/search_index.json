[["chapter1.html", "Chapter 1 Code 1 1.1 A brief history of R 1.2 R language essentials 1.3 For loops 1.4 Functions 1.5 The apply family", " Chapter 1 Code 1 1.1 A brief history of R Great for economists 1.2 R language essentials R can be used as a calculator 2 + 2 ## [1] 4 exp(0) ## [1] 1 log(1) ## [1] 0 Assigning a value to a variable (short cut Alt -) x &lt;- 15 To remove a variable rm(x) R handle data vectors as single objects. We can easily create data vectors x &lt;- c(1, 2, 3) We can see the object names that we have already created ls() ## [1] &quot;x&quot; We can easily remove all objects from the current workspace It is a good practice to start every new R Session with this line of code rm(list = ls()) R can easily creates sequences of numbers a &lt;- 1:10 b &lt;- seq(from = 1, to = 10, by = 1) Generating random numbers from a normal distribution specifying mean and standard deviation. The set.seed function allows us to generate the same numbers. This function is essential if we want someone else to be able to replicate the results of our simulations, for example when we want to share our work with colleagues or our thesis supervisor or when for example when we want to publish a paper. set.seed(1234) rnorm(n = 10, mean = 0, sd = 1) ## [1] -1.2070657 0.2774292 1.0844412 -2.3456977 0.4291247 0.5060559 ## [7] -0.5747400 -0.5466319 -0.5644520 -0.8900378 Assigning (a vector of) random numbers to a variable called y. y &lt;- rnorm(10, 0, 1) A very important function in R that we must absolutely know is the length function. The length function tells us the number of elements in a vector (but also other types of objects). We apply the length function to the y object that we created a moment ago. The result is obviously 10. length(y) ## [1] 10 Logical Operations. The operator == force R to make a true or false judgement. Be careful because the sign = in R can be used to define a variable, e.g.Â x = 5. This is why I recommend using the assignment operator &lt;- to define variables and use the equal sign where you cannot do otherwise. 2 + 2 == 4 ## [1] TRUE sqrt(25) == 4 ## [1] FALSE R also includes the normal arithmetic and logical operators. 100 &gt;= 100 ## [1] TRUE 99 &gt; 100 ## [1] FALSE 99 != 100 ## [1] TRUE !(1==1) # One is not equal to one -&gt; FALSE! ## [1] FALSE (1==1) | (2==3) # One is equal to one OR two is equal to three -&gt; TRUE! ## [1] TRUE (1==1) &amp; (2==3) # One is equal to one AND two is equal to three -&gt; FALSE! ## [1] FALSE basic functions (double equal, root, logical operators) save object in the env dataframes; vectors; lists; matrices functions We have already reached the end of the first chapter. I hope you are not bored. In the next chapter, we will take a closer look at how to work with data in a dataframe, such as how to edit data, select variables, create new ones and much more. 1.3 For loops 1.4 Functions nested loops data_interests &lt;- matrix(nrow = 100, ncol = 3, byrow = TRUE) interests &lt;- c(0.01, 0.02, 0.03) data_interests[1,1] &lt;- 1 data_interests[1,2] &lt;- 1 data_interests[1,3] &lt;- 1 for (t in 2:nrow(data_interests)) { for (s in 1:ncol(data_interests)) { data_interests[t,s] &lt;- data_interests[t-1,s] * (1 + interests[s]) } } plot(NULL, xlim = c(1, nrow(data_interests)), ylim = c(0, max(data_interests)), main = &quot;Investments&quot;, xlab = &quot;Year&quot;, ylab = &quot;Euro&quot;) for (l in 1:ncol(data_interests)) { lines(data_interests[,l], type = &quot;l&quot;, col = l) } 1.5 The apply family The apply family of functions. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
